generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
  binaryTargets   = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider  = "postgres"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model Video {
  id                 String    @id @default(uuid())
  uploadBatchId      String
  uploadOrder        Int
  duration           Int
  sizeInBytes        Int
  title              String
  storageKey         String
  audioStorageKey    String
  description        String?
  externalProviderId String?   @unique
  processedAt        DateTime?
  createdAt          DateTime  @default(now())
  newTestColumn      String?

  tags          Tag[]
  uploadBatch   UploadBatch    @relation(fields: [uploadBatchId], references: [id])
  transcription Transcription?
}

model Transcription {
  id         String    @id @default(uuid())
  videoId    String    @unique
  reviewedAt DateTime?
  createdAt  DateTime  @default(now())

  video    Video                  @relation(fields: [videoId], references: [id])
  segments TranscriptionSegment[]
}

model TranscriptionSegment {
  id              String  @id @default(uuid())
  transcriptionId String
  start           Decimal @db.Decimal(10, 2)
  end             Decimal @db.Decimal(10, 2)
  text            String

  transcription Transcription @relation(fields: [transcriptionId], references: [id])
}

model UploadBatch {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  videos Video[]
}

model Tag {
  id        String   @id @default(uuid())
  slug      String   @unique
  createdAt DateTime @default(now())

  videos Video[]
}
